{"ast":null,"code":"var _jsxFileName = \"/Users/itha/Downloads/multi-agent-hackathon/client/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport QueryForm from './components/QueryForm';\nimport TraceViewer from './components/TraceViewer';\nimport ReactMarkdown from 'react-markdown';\nimport ClipLoader from 'react-spinners/ClipLoader'; // ‚úÖ Loader\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [response, setResponse] = useState(null);\n  const [traceLogs, setTraceLogs] = useState([]);\n  const [loading, setLoading] = useState(false); // ‚úÖ Loader state\n\n  const handleQuerySubmit = async () => {\n    const trimmedQuery = query.trim();\n\n    // ‚úÖ Clear previous response and show loader\n    setResponse(null);\n    setTraceLogs([]);\n    setLoading(true);\n    if (trimmedQuery === '') {\n      setResponse({\n        summary: \"‚ùå No valid query provided.\",\n        trace: [{\n          role: \"System\",\n          action: \"Validation\",\n          result: \"Empty or invalid query.\"\n        }]\n      });\n      setLoading(false); // ‚ùå Stop loader\n      return;\n    }\n    try {\n      const res = await fetch('http://localhost:5000/api/ask', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: trimmedQuery\n        })\n      });\n      const data = await res.json();\n      setResponse(data.summary ? data : null);\n      setTraceLogs(data.trace || []);\n    } catch (error) {\n      setResponse({\n        summary: \"‚ùå Failed to connect to backend.\",\n        trace: [{\n          role: \"System\",\n          action: \"API Error\",\n          result: error.message\n        }]\n      });\n    } finally {\n      setLoading(false); // ‚úÖ Stop loader after everything\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDF10 Planner Agent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QueryForm, {\n      query: query,\n      setQuery: setQuery,\n      onSubmit: handleQuerySubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-container\",\n      children: [/*#__PURE__*/_jsxDEV(ClipLoader, {\n        size: 50,\n        color: \"#36d7b7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Processing your query...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), !loading && response && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Final Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: response.summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), !loading && traceLogs.length > 0 && /*#__PURE__*/_jsxDEV(TraceViewer, {\n      logs: traceLogs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 44\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tB4HpmhBBlHg19WlTumB1GmvNAc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","QueryForm","TraceViewer","ReactMarkdown","ClipLoader","jsxDEV","_jsxDEV","App","_s","query","setQuery","response","setResponse","traceLogs","setTraceLogs","loading","setLoading","handleQuerySubmit","trimmedQuery","trim","summary","trace","role","action","result","res","fetch","method","headers","body","JSON","stringify","data","json","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","size","color","length","logs","_c","$RefreshReg$"],"sources":["/Users/itha/Downloads/multi-agent-hackathon/client/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport QueryForm from './components/QueryForm';\nimport TraceViewer from './components/TraceViewer';\nimport ReactMarkdown from 'react-markdown';\nimport ClipLoader from 'react-spinners/ClipLoader'; // ‚úÖ Loader\nimport './App.css';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [response, setResponse] = useState(null);\n  const [traceLogs, setTraceLogs] = useState([]);\n  const [loading, setLoading] = useState(false); // ‚úÖ Loader state\n\n  const handleQuerySubmit = async () => {\n    const trimmedQuery = query.trim();\n\n    // ‚úÖ Clear previous response and show loader\n    setResponse(null);\n    setTraceLogs([]);\n    setLoading(true);\n\n    if (trimmedQuery === '') {\n      setResponse({\n        summary: \"‚ùå No valid query provided.\",\n        trace: [{\n          role: \"System\",\n          action: \"Validation\",\n          result: \"Empty or invalid query.\"\n        }]\n      });\n      setLoading(false); // ‚ùå Stop loader\n      return;\n    }\n\n    try {\n      const res = await fetch('http://localhost:5000/api/ask', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ query: trimmedQuery })\n      });\n\n      const data = await res.json();\n      setResponse(data.summary ? data : null);\n      setTraceLogs(data.trace || []);\n    } catch (error) {\n      setResponse({\n        summary: \"‚ùå Failed to connect to backend.\",\n        trace: [{ role: \"System\", action: \"API Error\", result: error.message }]\n      });\n    } finally {\n      setLoading(false); // ‚úÖ Stop loader after everything\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>üåê Planner Agent</h1>\n      <QueryForm query={query} setQuery={setQuery} onSubmit={handleQuerySubmit} />\n      \n      {/* ‚úÖ Show loader while loading */}\n      {loading && (\n        <div className=\"loader-container\">\n          <ClipLoader size={50} color=\"#36d7b7\" />\n          <p>Processing your query...</p>\n        </div>\n      )}\n\n      {/* ‚úÖ Show response after loading */}\n      {!loading && response && (\n        <div className=\"response-box\">\n          <h2>Final Response</h2>\n          <ReactMarkdown>{response.summary}</ReactMarkdown>\n        </div>\n      )}\n\n      {!loading && traceLogs.length > 0 && <TraceViewer logs={traceLogs} />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}